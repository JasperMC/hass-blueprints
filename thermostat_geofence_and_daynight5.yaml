blueprint:
    name: Thermostat with Geofence and Day/Night cycle 
    description: Thermostat control based on geofence, day/night cycle, or both!
    domain: automation

    input:
      thermostat:
        name: Thermostat
        description: The thermostat you'd like to control.
        selector:
          entity:
              domain: climate
      temperature_sensor:
       name: Temperature Sensor
       description: An optional external temperature sensor to use.
       selector:
         entity:
           domain: sensor
           device_class: temperature

      geofence_enabled:
       name: Enable Geofence
       description: Whether to enable or disable geofencing.
       default: false
       selector:
         boolean:

      geofence_zone:
       name: Geofence Zone
       description: The zone to use for geofencing.
       selector:
         entity:
           domain: zone

      present_temperature:
        name: Present temperature
        description: Target temperature when present.
        default: 20
        selector:
          number:
            min: 15
            max: 30
            step: 1
            mode: slider

      away_temperature:
        name: Away temperature
        description: Target temperature when away.
        default: 20
        selector:
          number:
            min: 15
            max: 30
            step: 1
            mode: slider

      day_night_cycle_enabled:
        name: Enable Day/Night cycle
        description: Whether to enable or disable day/night cycle control.
        default: false
        selector:
          boolean:

      daytime:
        name: Day time
        description: The time at which you consider it to be day time.
        default: '07:30:00'
        selector:
          time:

      daytime_temperature:
        name: Day time temperature
        description: Target temperature at day time.
        default: 20
        selector:
          number:
            min: 15
            max: 30
            step: 1
            mode: slider

      nighttime:
        name: Night time
        description: The time at which you consider it to be night time.
        default: '21:30:00'
        selector:
          time:

      nighttime_temperature:
        name: Night time temperature
        description: Target temperature at night time.
        default: 20
        selector:
          number:
            min: 15
            max: 30
            step: 1
            mode: slider


variables:
  thermostat: !input thermostat
  geofence_enabled: !input geofence_enabled
  geofence_zone: !input geofence_zone

  present_temperature: !input present_temperature
  away_temperature: !input away_temperature

  day_night_cycle_enabled: !input day_night_cycle_enabled
  day_time: !input daytime
  daytime_temperature: !input daytime_temperature
  night_time: !input nighttime
  nighttime_temperature: !input nighttime_temperature




trigger:
  - platform: template
    value_template: "{{ states.person|selectattr('state','equalto', ( !input geofence_zone | replace('zone.', '')) )|list|length }}"
    id: zone_occupants_change
  - platform: time
    at: !input daytime
    id: daytime
  - platform: time
    at: !input nighttime
    id: nighttime


condition:
  - condition: template
    value_template: '{{ (geofence_enabled or day_night_cycle_enabled) }}'

action:
  - service: climate.set_temperature
    target:
      entity_id: !input thermostat
    data:
      temperature: |
        {% if states.person|selectattr('state','equalto', ( !input geofence_zone | replace('zone.', '')) )|list|length > 0 %}
          {% if day_night_cycle_enabled %}
            {% if trigger.id == "daytime" %}
              {{ daytime_temperature }}
            {% elif %}
              {{ nighttime_temperature }}
            {% endif %}
          {% else %}
            {{ present_temperature }}
          {% endif %}}
        {% else %}
          {{ away_temperature }}
        {% endif %}
